import { MouseEventHandler, ReactEventHandler, useEffect, useRef, useState } from "react";
import IFrame from "./IFrame";
import {Typography } from  "@material-ui/core"

const IframeParent=()=>{

    const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement =>
    input !== null && input.tagName === 'IFRAME'
    let frame:HTMLElement|any = document.getElementById('pFrame');

    const [iFrameVisible,setIFrameVisible]=useState<boolean>(false);

    useEffect(() => {
        console.log("useffect to display Iframevisible state:=>"+iFrameVisible)
    }, [iFrameVisible])
    
    const sendMessage:MouseEventHandler<HTMLButtonElement> | undefined=()=>{  

        setIFrameVisible(prevState=>!prevState)
        setTimeout(()=>{
            const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement =>
            input !== null && input.tagName === 'IFRAME'
            let frame:HTMLElement|any = document.getElementById('pFrame');
            frame.style.visibility="visible"
            if (isIFrame(frame) && frame.contentWindow) {
                 console.log("Hello from APP1")
                 frame.contentWindow.postMessage("Hello from APP1", 'http://localhost:3001/');
             }
        },200)
        
        
        // const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement =>
        // input !== null && input.tagName === 'IFRAME'
        // let frame:HTMLElement|any = document.getElementById('pFrame');
        // frame.style.visibility="visible"
        //  if (isIFrame(frame) && frame.contentWindow) {
        //     console.log("Hello from APP1")
        //     frame.contentWindow.postMessage("Hello from APP1", 'http://localhost:3001/');
        //  }
    }


    return(
        <div className=".main">
            <Typography variant="h6" component="h6" >Client-Side</Typography >
            <button onClick={sendMessage}>Send Message</button>
            {
                iFrameVisible===true?
                    <IFrame 
                    /> 
                    :
                    null
            }
        </div>
    )
}
export default IframeParent;